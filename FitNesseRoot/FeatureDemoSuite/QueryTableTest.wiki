A query checks the full set and will object if there are missing or surplus entries. It doesn't care about ordering

|query:query fixture|5  |
|n                  |n^2|
|1                  |1  |
|3                  |9  |
|4                  |16 |
|2                  |4  |
|0                  |0  |
A subset query only checks the subset you specify. If there are more rows, they will be ignored

|subset query:query fixture|
|n                         |n^2|
|1                         |1  |
|4                         |16 |
|2                         |4  |
An ordered query ''will'' care about order

|ordered query:query fixture|
|n           |n^2           |
|1           |1             |
|3           |9             |
|4           |16            |
|2           |4             |
Note that you don't need to change the fixture to make these work. FitNesse does all the evaluation processing.

!-QueryFixture.cs-!:
{{{using System.Collections.ObjectModel;

namespace TestSlim
{
    public class QueryFixture
    {
        private readonly int _max;

        public QueryFixture(int max) => _max = max;

        public QueryFixture() => _max = 4;

        public Collection<object> Query()
        {
            var rowList = new Collection<object>();
            for (var i = 1; i <= _max; i++)
            {
                rowList.Add(new Collection<object> {new Collection<object> {"n", i}, new Collection<object> {"n^2", i * i}});
            }
            return rowList;
        }
    }
}
}}}