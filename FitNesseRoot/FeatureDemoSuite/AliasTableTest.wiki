You can use query fixtures as script fixtures too. That way, you can inspect what comes back (useful for debugging), 
and you can get a reference to the fixture via the 'get fixture' function.

!|script|test query|2|
|show|query|
|$query=|get fixture|

Now we create an alias refering to the fixture

|define alias|
|my query|query: $query|

And we run the query fixture using that alias.

|my query|
|n|2n|
|1|2|
|2|4|

!-TestQuery.cs-!:
{{{using System.Collections.ObjectModel;

namespace TestSlim
{
    public class TestQuery
    {
        private readonly int _max;

        public TestQuery(int maxNumber) => _max = maxNumber;

        public Collection<object> Query()
        {
            var rowList = new Collection<object>();
            for (var i = 1; i <= _max; i++)
            {
                rowList.Add(new Collection<object> {new Collection<object> {"n", i}, new Collection<object> {"2n", 2 * i}});
            }
            return rowList;
        }
    }
}
}}}

