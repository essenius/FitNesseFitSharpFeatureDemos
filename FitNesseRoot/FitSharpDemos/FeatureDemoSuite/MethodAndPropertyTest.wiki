The way !-FitSharp-! resolves methods and properties can be confusing sometimes. In this example, you can't use the !-GetData-! or !-SetData-! methods because the Data property will be found first. 
Therefore the recommendation is to standardize using Properties, since the C# convention favors that. You will also see that the static analysis engine will complain about the existence of both Data and 
!-GetData-! (CA1721), and recommends to use a Property for !-GetData-! (CA1024).

!|Script |Method And Property                                      |
|note    |calls the Data property since that is found first        |
|check   |get data                         |321                    |
|note    |Calls the Data property since that is the only match     |
|check   |data                             |321                    |
|note    |sets the Data property (does not call the SetData method)|
|set data|4                                                        |
|check   |private data                     |123                    |
|check   |data                             |4                      |

!-MethodAndProperty.cs-!
{{{namespace TestSlim;

public class MethodAndProperty
{
    private static int _privateData = 123;
    public static int Data { get; set; } = 321;
    public static int GetData() => _privateData;
    public static void SetData(int value) => _privateData = value;
}
}}}

Note: order of the methods is important here!
